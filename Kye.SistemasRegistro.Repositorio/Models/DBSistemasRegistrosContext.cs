// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Kye.SistemasRegistros.Repositorio.Models;

public partial class DBSistemasRegistrosContext : DbContext
{
    public DBSistemasRegistrosContext()
    {
    }

    public DBSistemasRegistrosContext(DbContextOptions<DBSistemasRegistrosContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BitacorasSistema> BitacorasSistemas { get; set; }

    public virtual DbSet<Checkin> Checkins { get; set; }

    public virtual DbSet<ContactosEmergencia> ContactosEmergencias { get; set; }

    public virtual DbSet<Logo> Logos { get; set; }

    public virtual DbSet<Membresia> Membresias { get; set; }

    public virtual DbSet<Miembro> Miembros { get; set; }

    public virtual DbSet<Pago> Pagos { get; set; }

    public virtual DbSet<Plane> Planes { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=(LocalDB)\\MSSQLLocalDB;AttachDbFilename=C:\\Users\\ingca\\source\\repos\\Kye.SistemasRegistros\\Kye.SistemasRegistro.Repositorio\\BDSistemaRegistro.mdf;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BitacorasSistema>(entity =>
        {
            entity.HasKey(e => e.Idbitacora).HasName("PK__BITACORA__AE822D9A1894B84A");

            entity.ToTable("BITACORAS_SISTEMA");

            entity.Property(e => e.Idbitacora).HasColumnName("IDBitacora");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.FechaAccion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Idusuario).HasColumnName("IDUsuario");
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);
            entity.Property(e => e.TablaAfectada)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TipoAccion)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.IdusuarioNavigation).WithMany(p => p.BitacorasSistemas)
                .HasForeignKey(d => d.Idusuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BITACORAS_USUARIOS");
        });

        modelBuilder.Entity<Checkin>(entity =>
        {
            entity.HasKey(e => e.IdcheckIn).HasName("PK__CHECKINS__06F184662A3A102D");

            entity.ToTable("CHECKINS");

            entity.Property(e => e.IdcheckIn).HasColumnName("IDCheckIn");
            entity.Property(e => e.FechaHoraEntrada)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaHoraSalida).HasColumnType("datetime");
            entity.Property(e => e.Idmiembro).HasColumnName("IDMiembro");
            entity.Property(e => e.MetodoEntrada)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);

            entity.HasOne(d => d.IdmiembroNavigation).WithMany(p => p.Checkins)
                .HasForeignKey(d => d.Idmiembro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CHECKINS_MIEMBROS");
        });

        modelBuilder.Entity<ContactosEmergencia>(entity =>
        {
            entity.HasKey(e => e.Idemergencia).HasName("PK__CONTACTO__18334948EB2C9A17");

            entity.ToTable("CONTACTOS_EMERGENCIAS");

            entity.Property(e => e.Idemergencia).HasColumnName("IDEmergencia");
            entity.Property(e => e.Idmiembro).HasColumnName("IDMiembro");
            entity.Property(e => e.NombreContacto)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Parentesco)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);
            entity.Property(e => e.TelefonoContacto)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.IdmiembroNavigation).WithMany(p => p.ContactosEmergencia)
                .HasForeignKey(d => d.Idmiembro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CONTACTOS_EMERGENCIAS_MIEMBROS");
        });

        modelBuilder.Entity<Logo>(entity =>
        {
            entity.HasKey(e => e.Idlogo).HasName("PK__LOGOS__CA548819C34E6505");

            entity.ToTable("LOGOS");

            entity.Property(e => e.Idlogo).HasColumnName("IDLogo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Imagen).IsRequired();
            entity.Property(e => e.NombreLogo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);
        });

        modelBuilder.Entity<Membresia>(entity =>
        {
            entity.HasKey(e => e.Idmembresia).HasName("PK__MEMBRESI__FC379914C171405D");

            entity.ToTable("MEMBRESIAS");

            entity.Property(e => e.Idmembresia).HasColumnName("IDMembresia");
            entity.Property(e => e.ColorSemaforo)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FechaFin).HasColumnType("date");
            entity.Property(e => e.FechaInicio).HasColumnType("date");
            entity.Property(e => e.FechaProximoPago).HasColumnType("date");
            entity.Property(e => e.Idmiembro).HasColumnName("IDMiembro");
            entity.Property(e => e.Idplan).HasColumnName("IDPlan");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);
            entity.Property(e => e.StatusMembresia)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.IdmiembroNavigation).WithMany(p => p.Membresia)
                .HasForeignKey(d => d.Idmiembro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MEMBRESIAS_MIEMBROS");

            entity.HasOne(d => d.IdplanNavigation).WithMany(p => p.Membresia)
                .HasForeignKey(d => d.Idplan)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MEMBRESIAS_PLANES");
        });

        modelBuilder.Entity<Miembro>(entity =>
        {
            entity.HasKey(e => e.Idmiembro).HasName("PK__tmp_ms_x__59448533AA4769A6");

            entity.ToTable("MIEMBROS");

            entity.Property(e => e.Idmiembro).HasColumnName("IDMiembro");
            entity.Property(e => e.Celular)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CorreoElectronico)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FechaNacimiento).HasColumnType("date");
            entity.Property(e => e.FechaRegistro)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Fotografia).IsUnicode(false);
            entity.Property(e => e.Idhuella).HasColumnName("IDHuella");
            entity.Property(e => e.IdusuarioRegistro).HasColumnName("IDUsuarioRegistro");
            entity.Property(e => e.NombreCompleto)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);
            entity.Property(e => e.WhatsApp)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.IdusuarioRegistroNavigation).WithMany(p => p.Miembros)
                .HasForeignKey(d => d.IdusuarioRegistro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MIEMBROS_USUARIOS_REGISTRO");
        });

        modelBuilder.Entity<Pago>(entity =>
        {
            entity.HasKey(e => e.Idpago).HasName("PK__PAGOS__8A5C3DEE5C797955");

            entity.ToTable("PAGOS");

            entity.Property(e => e.Idpago).HasColumnName("IDPago");
            entity.Property(e => e.Comentario)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.DescuentoAplicado).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.FechaPago)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Idmembresia).HasColumnName("IDMembresia");
            entity.Property(e => e.IdusuarioCobro).HasColumnName("IDUsuarioCobro");
            entity.Property(e => e.MetodoPago)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MontoPagado).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);

            entity.HasOne(d => d.IdmembresiaNavigation).WithMany(p => p.Pagos)
                .HasForeignKey(d => d.Idmembresia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PAGOS_MEMBRESIAS");

            entity.HasOne(d => d.IdusuarioCobroNavigation).WithMany(p => p.Pagos)
                .HasForeignKey(d => d.IdusuarioCobro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PAGOS_USUARIOS_COBRO");
        });

        modelBuilder.Entity<Plane>(entity =>
        {
            entity.HasKey(e => e.Idplan).HasName("PK__PLANES__8DBD72BAE66B0F85");

            entity.ToTable("PLANES");

            entity.Property(e => e.Idplan).HasColumnName("IDPlan");
            entity.Property(e => e.CostoBase).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.DescripcionPromocion)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.FechaFinPromocion).HasColumnType("date");
            entity.Property(e => e.FechaInicioPromocion).HasColumnType("date");
            entity.Property(e => e.NombrePlan)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);
            entity.Property(e => e.TipoDescuento)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ValorDescuento).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.Idusuario).HasName("PK__USUARIOS__5231116938F864A7");

            entity.ToTable("USUARIOS");

            entity.Property(e => e.Idusuario).HasColumnName("IDUsuario");
            entity.Property(e => e.ContraseñaHash)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Rol)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.StatusActivo).HasDefaultValue(true);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}